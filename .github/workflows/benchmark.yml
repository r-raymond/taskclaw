name: Benchmark

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install criterion
      run: cargo install cargo-criterion

    - name: Run benchmarks
      run: cargo criterion --message-format=json | tee benchmark-results.json

    - name: Store benchmark result
      uses: benchmark-action/github-action-benchmark@v1
      if: github.ref == 'refs/heads/main'
      with:
        tool: 'cargo'
        output-file-path: benchmark-results.json
        github-token: ${{ secrets.GITHUB_TOKEN }}
        auto-push: true
        # Show alert with commit comment on detecting possible performance regression
        alert-threshold: '200%'
        comment-on-alert: true
        fail-on-alert: true

  size:
    name: Binary Size Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Build release binary
      run: cargo build --release

    - name: Check binary size
      run: |
        ls -lah target/release/claw
        size target/release/claw
        echo "Binary size: $(stat -c%s target/release/claw) bytes"

    - name: Install cargo-bloat
      run: cargo install cargo-bloat

    - name: Analyze binary bloat
      run: cargo bloat --release --crates

  startup-time:
    name: Startup Time Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Build release binary
      run: cargo build --release

    - name: Measure startup time
      run: |
        echo "Measuring startup time..."
        time ./target/release/claw --help > /dev/null
        echo "Measuring help command time..."
        time ./target/release/claw --version > /dev/null
